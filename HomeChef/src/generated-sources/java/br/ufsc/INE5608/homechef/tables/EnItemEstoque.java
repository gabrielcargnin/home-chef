/*
 * This file is generated by jOOQ.
*/
package br.ufsc.INE5608.homechef.tables;


import br.ufsc.INE5608.homechef.Homechef;
import br.ufsc.INE5608.homechef.Keys;
import br.ufsc.INE5608.homechef.tables.records.EnItemEstoqueRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnItemEstoque extends TableImpl<EnItemEstoqueRecord> {

    private static final long serialVersionUID = 421265168;

    /**
     * The reference instance of <code>homechef.en_item_estoque</code>
     */
    public static final EnItemEstoque EN_ITEM_ESTOQUE = new EnItemEstoque();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EnItemEstoqueRecord> getRecordType() {
        return EnItemEstoqueRecord.class;
    }

    /**
     * The column <code>homechef.en_item_estoque.quantidade</code>.
     */
    public final TableField<EnItemEstoqueRecord, Integer> QUANTIDADE = createField("quantidade", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>homechef.en_item_estoque.validade</code>.
     */
    public final TableField<EnItemEstoqueRecord, LocalDate> VALIDADE = createField("validade", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>homechef.en_item_estoque.id_ingrediente</code>.
     */
    public final TableField<EnItemEstoqueRecord, Integer> ID_INGREDIENTE = createField("id_ingrediente", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>homechef.en_item_estoque.id_item_estoque</code>.
     */
    public final TableField<EnItemEstoqueRecord, Integer> ID_ITEM_ESTOQUE = createField("id_item_estoque", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('homechef.en_item_estoque_id_item_estoque_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>homechef.en_item_estoque.id_unidade</code>.
     */
    public final TableField<EnItemEstoqueRecord, Integer> ID_UNIDADE = createField("id_unidade", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>homechef.en_item_estoque</code> table reference
     */
    public EnItemEstoque() {
        this("en_item_estoque", null);
    }

    /**
     * Create an aliased <code>homechef.en_item_estoque</code> table reference
     */
    public EnItemEstoque(String alias) {
        this(alias, EN_ITEM_ESTOQUE);
    }

    private EnItemEstoque(String alias, Table<EnItemEstoqueRecord> aliased) {
        this(alias, aliased, null);
    }

    private EnItemEstoque(String alias, Table<EnItemEstoqueRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Homechef.HOMECHEF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EnItemEstoqueRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EN_ITEM_ESTOQUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EnItemEstoqueRecord> getPrimaryKey() {
        return Keys.EN_ITEM_ESTOQUE_ID_ITEM_ESTOQUE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EnItemEstoqueRecord>> getKeys() {
        return Arrays.<UniqueKey<EnItemEstoqueRecord>>asList(Keys.EN_ITEM_ESTOQUE_ID_ITEM_ESTOQUE_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EnItemEstoqueRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EnItemEstoqueRecord, ?>>asList(Keys.EN_ITEM_ESTOQUE__EN_ITEM_ESTOQUE_EN_INGREDIENTE_ID_INGREDIENTE_FK, Keys.EN_ITEM_ESTOQUE__EN_ITEM_ESTOQUE_EN_UNIDADE_ID_UNIDADE_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnItemEstoque as(String alias) {
        return new EnItemEstoque(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EnItemEstoque rename(String name) {
        return new EnItemEstoque(name, null);
    }
}
