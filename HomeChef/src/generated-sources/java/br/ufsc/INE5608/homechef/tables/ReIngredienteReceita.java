/*
 * This file is generated by jOOQ.
*/
package br.ufsc.INE5608.homechef.tables;


import br.ufsc.INE5608.homechef.Homechef;
import br.ufsc.INE5608.homechef.Keys;
import br.ufsc.INE5608.homechef.tables.records.ReIngredienteReceitaRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReIngredienteReceita extends TableImpl<ReIngredienteReceitaRecord> {

    private static final long serialVersionUID = 1939373004;

    /**
     * The reference instance of <code>homechef.re_ingrediente_receita</code>
     */
    public static final ReIngredienteReceita RE_INGREDIENTE_RECEITA = new ReIngredienteReceita();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReIngredienteReceitaRecord> getRecordType() {
        return ReIngredienteReceitaRecord.class;
    }

    /**
     * The column <code>homechef.re_ingrediente_receita.id_ingrediente_receita</code>.
     */
    public final TableField<ReIngredienteReceitaRecord, Integer> ID_INGREDIENTE_RECEITA = createField("id_ingrediente_receita", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('homechef.en_ingrediente_receita_id_ingrediente_receita_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>homechef.re_ingrediente_receita.id_ingrediente</code>.
     */
    public final TableField<ReIngredienteReceitaRecord, Integer> ID_INGREDIENTE = createField("id_ingrediente", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>homechef.re_ingrediente_receita.id_receita</code>.
     */
    public final TableField<ReIngredienteReceitaRecord, Integer> ID_RECEITA = createField("id_receita", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>homechef.re_ingrediente_receita.quantidade</code>.
     */
    public final TableField<ReIngredienteReceitaRecord, BigDecimal> QUANTIDADE = createField("quantidade", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * Create a <code>homechef.re_ingrediente_receita</code> table reference
     */
    public ReIngredienteReceita() {
        this("re_ingrediente_receita", null);
    }

    /**
     * Create an aliased <code>homechef.re_ingrediente_receita</code> table reference
     */
    public ReIngredienteReceita(String alias) {
        this(alias, RE_INGREDIENTE_RECEITA);
    }

    private ReIngredienteReceita(String alias, Table<ReIngredienteReceitaRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReIngredienteReceita(String alias, Table<ReIngredienteReceitaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Homechef.HOMECHEF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ReIngredienteReceitaRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RE_INGREDIENTE_RECEITA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReIngredienteReceitaRecord> getPrimaryKey() {
        return Keys.EN_INGREDIENTE_RECEITA_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReIngredienteReceitaRecord>> getKeys() {
        return Arrays.<UniqueKey<ReIngredienteReceitaRecord>>asList(Keys.EN_INGREDIENTE_RECEITA_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ReIngredienteReceitaRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ReIngredienteReceitaRecord, ?>>asList(Keys.RE_INGREDIENTE_RECEITA__EN_INGREDIENTE_RECEITA_EN_INGREDIENTE_ID_INGREDIENTE_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReIngredienteReceita as(String alias) {
        return new ReIngredienteReceita(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReIngredienteReceita rename(String name) {
        return new ReIngredienteReceita(name, null);
    }
}
